package ${package.Controller};
import java.util.Map;
import java.util.Date;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.tp.common.constant.OperateConstant;
import ${package.Entity}.${entity};
import ${package.Service}.I${entity}Service;
import com.tp.common.controller.BaseController;
import org.springframework.web.bind.annotation.RestController;
import com.tp.common.exception.BizException;
import org.springframework.web.bind.annotation.PathVariable;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.tp.common.page.PageParam;
import io.swagger.annotations.ApiParam;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("/${table.entityPath}")
public class ${table.controllerName} extends BaseController {
    private final Logger logger = LoggerFactory.getLogger(${table.controllerName}.class);

    @Autowired private I${entity}Service ${table.entityPath}Service;

    /**
    * 通过ID查询
    *
    * @param id ID
    * @return ${entity}
    */
    @GetMapping("/{id}")
    @ApiOperation(httpMethod = "GET", value = "通过ID查询${table.comment}")
    public Map<String, Object> get(@PathVariable String id) {
        try {
             return  successMap(${table.entityPath}Service.selectById(id));
        }catch (BizException e){
             return failMap(e.getMessage());
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
             return failMap(OperateConstant.OPERATION_FAIL);
        }
    }


    /**
    * 分页查询信息
    *
    * @param params 分页对象
    * @return 分页对象
    */
    @RequestMapping("/page")
    @ApiOperation(httpMethod = "POST", value = "分页查询${table.comment}")
    public Map<String, Object> page(@RequestParam Map<String, Object> params) {
        try {
             return  successMap("todo");
        }catch (BizException e){
            return failMap(e.getMessage());
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            return failMap(OperateConstant.QUERY_FAIL);
        }
    }

    /**
     * 添加
     * @param  ${table.entityPath}  实体
     * @return
     */
    @PostMapping
    @ApiOperation(httpMethod = "POST", value = "添加${table.comment}")
    public Map<String, Object> add(@RequestBody ${entity} ${table.entityPath}) {
        try {
             return  successMap(${table.entityPath}Service.insert(${table.entityPath}));
        }catch (BizException e){
             return failMap(e.getMessage());
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            return failMap(OperateConstant.OPERATION_FAIL);
        }
    }

    /**
     * 删除
     * @param id ID
     * @return
     */
    @DeleteMapping("/{id}")
    @ApiOperation(httpMethod = "DELETE", value = "删除${table.comment}")
    public Map<String, Object> delete(@PathVariable String id) {
        try {
             return  successMap(${table.entityPath}Service.deleteById(id));
        }catch (BizException e){
             return failMap(e.getMessage());
        } catch (Exception e) {
             logger.error(e.getMessage(), e);
             return failMap(OperateConstant.OPERATION_FAIL);
        }
    }

    /**
     * 编辑
     * @param  ${table.entityPath}  实体
     * @return
     */
    @PutMapping
    @ApiOperation(httpMethod = "PUT", value = "编辑${table.comment}")
    public  Map<String, Object> edit(@RequestBody ${entity} ${table.entityPath}) {
        try {
            return  successMap(${table.entityPath}Service.insertOrUpdate(${table.entityPath}));
        }catch (BizException e){
            return failMap(e.getMessage());
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            return failMap(OperateConstant.OPERATION_FAIL);
        }
    }
}
